stages:
  - environment
  - lint
  - build
  - test
  - build_release
  - deploy
  # - deploy

.updateContainerJob:
  image: docker:stable
  stage: environment
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

updateContainer:
  extends: .updateContainerJob
  only:
    changes:
      - Dockerfile

ensureContainer:
  extends: .updateContainerJob
  allow_failure: true
  before_script:
    - "mkdir -p ~/.docker && echo '{\"experimental\": \"enabled\"}' > ~/.docker/config.json"
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    # Skip update container `script` if the container already exists
    # via https://gitlab.com/gitlab-org/gitlab-ce/issues/26866#note_97609397 -> https://stackoverflow.com/a/52077071/796832
    - docker manifest inspect $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG > /dev/null && exit || true
  except:
    changes:
      - Dockerfile

lintDebug:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: lint
  before_script:
    - chmod +x gradlew
    - "export VERSION_CODE=$(($CI_PIPELINE_IID)) && echo $VERSION_CODE"
    - "export VERSION_SHA=`echo ${CI_COMMIT_SHA:0:8}` && echo $VERSION_SHA"
    # - export JAVA_HOME=/usr/local/openjdk-8
    # - export PATH=$PATH:/usr/local/openjdk-8/bin/java
  script:
    - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint

assembleDebug:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: build
  before_script:
    - chmod +x gradlew
  script:
    - ./gradlew assembleDebug
  artifacts:
    paths:
      - app/build/outputs

debugTests:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: test
  before_script:
    - chmod +x gradlew
  script:
    - ./gradlew -Pci --console=plain :app:testDebug

unitTest:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: test
  before_script:
    - chmod +x gradlew
  script:
    - ./gradlew -Pci --console=plain :app:test

andoidTest:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: test
  before_script:
    - chmod +x gradlew
  script:
    # - ./gradlew -Pci --console=plain :app:connectedAndroidTest
    - echo 1
buildRelease:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: build_release
  before_script:
    - chmod +x gradlew
  script:
    - ./gradlew app:build
  artifacts:
    paths:
      - app/build

deployLibrary:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  stage: deploy
  before_script:
    - chmod +x gradlew
  variables:
    ACCESS_KEY: $ACCESS_KEY
    SECRET_KEY: $SECRET_KEY
    URL: $URL
  script:
    - ./gradlew app:publish
    # - echo 1

# deploy:
#   image: maven:3.3.9-jdk-8
#   stage: deploy
#   script:
#     - 'cp ci_settings.xml /root/.m2/settings.xml'
#     - 'mvn deploy'
#   only:
#     - master
